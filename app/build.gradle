apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config.getAt("compile_sdk")
    buildToolsVersion config.getAt("build_tools")

    defaultConfig {
        applicationId config.getAt("application_id")
        minSdkVersion config.getAt("min_sdk")
        targetSdkVersion config.getAt("target_sdk")
        versionCode config.getAt("version_code")
        versionName config.getAt("version_name")
        testInstrumentationRunner config.getAt("test_runner")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def applicationDependencies = rootProject.ext.mainApplication
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def developmentDependencies = rootProject.ext.development

    //Compile time dependencies
    kapt applicationDependencies.daggerCompiler
    compileOnly applicationDependencies.javaxAnnotation
    compileOnly applicationDependencies.javaxInject

    //Application dependencies
    implementation applicationDependencies.kotlin
    implementation applicationDependencies.appCompat
    implementation applicationDependencies.cardView
    implementation applicationDependencies.recyclerView
    implementation applicationDependencies.design
    implementation applicationDependencies.androidAnnotations
    implementation applicationDependencies.glide
    implementation applicationDependencies.dagger
    implementation applicationDependencies.rxJava
    implementation applicationDependencies.rxAndroid
    implementation applicationDependencies.retrofit
    implementation applicationDependencies.retrofitAdapter
    implementation applicationDependencies.okhttpLoggingInterceptor


    //Development dependencies
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoop
    testImplementation developmentDependencies.leakCanaryNoop
}
